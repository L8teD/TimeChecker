<UserControl x:Class="TimeChecker.WPF.Views.TimePicker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TimeChecker.WPF.Views"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:vm="clr-namespace:TimeChecker.WPF.ViewModels"
             d:DataContext="{d:DesignInstance Type=vm:ViewItem, IsDesignTimeCreatable=False}"
             mc:Ignorable="d">
    
    <materialDesign:DialogHost DialogTheme="Inherit" Identifier="RootDialog">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding Time, StringFormat=t}"
                       VerticalAlignment="Center"
                       FontSize="24" />
            <Button Margin="8 0 0 0"
                    Content="..."
                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}">
                <Button.CommandParameter>
                    <Grid Margin="-1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <materialDesign:Clock DisplayAutomation="ToSeconds" x:Name="Clock" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TimeChanged">
                                    <i:InvokeCommandAction Command="{Binding TimeChangedCommand}" 
                                                           CommandParameter="{Binding ElementName=Clock, Path=Time}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </materialDesign:Clock>
                        <StackPanel Grid.Row="1"
                                    Margin="8"
                                    HorizontalAlignment="Right"
                                    Orientation="Horizontal">
                            <Button Style="{StaticResource MaterialDesignFlatButton}"
                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                    CommandParameter="0"
                                    Content="CANCEL" />
                            <Button Style="{StaticResource MaterialDesignFlatButton}"
                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                    CommandParameter="1"
                                    Content="OK" />
                        </StackPanel>
                    </Grid>
                </Button.CommandParameter>
            </Button>
        </StackPanel>
    </materialDesign:DialogHost>
</UserControl>
